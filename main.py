#!/usr/bin/env python3
import asyncio
from datetime import datetime, date
import pytz
import feedparser
from telegram import Bot

# Telegram configuration
BOT_TOKEN = '8442392037:AAEiM_b4QfdFLqbmmc1PXNvA99yxmFVLEp8'
CHAT_ID = '350766421'

# RSS URL –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è Investing.com
RSS_URL = 'https://www.investing.com/rss/financial-calendar.rss'

def fetch_rss_events():
    """–ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ RSS Investing.com"""
    try:
        feed = feedparser.parse(RSS_URL)
        events = []

        msk_tz = pytz.timezone('Europe/Moscow')
        today = date.today()

        for entry in feed.entries:
            # –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è –≤ RSS
            if hasattr(entry, 'published_parsed'):
                event_date = datetime(*entry.published_parsed[:6])
            else:
                continue

            # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            if event_date.date() != today:
                continue

            # –í—Ä–µ–º—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MSK
            est_tz = pytz.timezone('US/Eastern')
            est_dt = est_tz.localize(event_date)
            msk_dt = est_dt.astimezone(msk_tz)
            time_str = msk_dt.strftime('%H:%M')

            events.append({
                'time': time_str,
                'title': entry.title
            })

        return sorted(events, key=lambda x: x['time'])
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è RSS: {e}")
        return []

def format_events(events):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è Telegram"""
    if not events:
        return "üìÖ –°–µ–≥–æ–¥–Ω—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –°–®–ê –Ω–µ—Ç."

    message = f"üìÖ <b>–≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –°–û–ë–´–¢–ò–Ø –°–®–ê üá∫üá∏</b>\n"
    message += f"üìÜ <b>–î–∞—Ç–∞: {date.today().strftime('%d.%m.%Y')}</b>\n"
    message += "‚è∞ <b>–í—Ä–µ–º—è –º–æ—Å–∫–æ–≤—Å–∫–æ–µ (MSK)</b>\n\n"

    for ev in events:
        message += f"üü¢ <b>{ev['time']}</b> ‚Äî {ev['title']}\n"

    message += "\nüí° –î–∞–Ω–Ω—ã–µ: Investing.com RSS"
    return message

async def send_telegram_message(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    try:
        bot = Bot(token=BOT_TOKEN)
        await bot.send_message(chat_id=CHAT_ID, text=text, parse_mode='HTML')
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

async def main():
    print("=== US ECONOMIC EVENTS BOT (RSS) ===")
    try:
        events = await asyncio.to_thread(fetch_rss_events)
        message = format_events(events)
        print(message)
        await send_telegram_message(message)
    except Exception as e:
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
