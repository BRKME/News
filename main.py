#!/usr/bin/env python3
"""
–ü–∞—Ä—Å–µ—Ä —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –°–®–ê —Å Forex Factory
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 MSK
"""

import requests
from bs4 import BeautifulSoup
from datetime import datetime, date, timedelta
import asyncio
import os
from telegram import Bot
import re
import pytz

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', '8442392037:AAEiM_b4QfdFLqbmmc1PXNvA99yxmFVLEp8')
CHAT_ID = os.getenv('TELEGRAM_CHAT_ID', '350766421')

def convert_to_moscow_time(time_str):
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è EST (Forex Factory) –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è (MSK)
    –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: EST ‚Üí MSK = +6 —á–∞—Å–æ–≤
    """
    try:
        if time_str == 'All Day' or time_str == '' or time_str == 'Tentative':
            return '–£—Ç–æ—á–Ω—è–µ—Ç—Å—è'
        
        # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è (—Ñ–æ—Ä–º–∞—Ç: "3:00pm")
        time_match = re.search(r'(\d+):(\d+)(am|pm)', time_str.lower())
        if not time_match:
            return time_str
        
        hour = int(time_match.group(1))
        minute = int(time_match.group(2))
        period = time_match.group(3)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ 24-—á–∞—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç
        if period == 'pm' and hour != 12:
            hour += 12
        elif period == 'am' and hour == 12:
            hour = 0
        
        # –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è: EST ‚Üí MSK = +6 —á–∞—Å–æ–≤
        msk_hour = hour + 6
        if msk_hour >= 24:
            msk_hour -= 24
        
        return f"{msk_hour:02d}:{minute:02d}"
    
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ '{time_str}': {e}")
        return time_str

def get_manual_events():
    """
    –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –º–æ—Å–∫–æ–≤—Å–∫–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
    """
    print("üîß –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è –°–®–ê...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
    today = date.today()
    events = []
    
    # –ü—Ä–∏–º–µ—Ä —Å–æ–±—ã—Ç–∏–π –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    # –í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ —Å Forex Factory
    sample_events = [
        {
            'date': '29.10',
            'time': '21:00',
            'name': 'Federal Funds Rate',
            'imp_emoji': 'üî¥',
            'forecast': '4.00%',
            'previous': '4.25%'
        },
        {
            'date': '29.10',
            'time': '21:00',
            'name': 'FOMC Statement',
            'imp_emoji': 'üî¥',
            'forecast': '',
            'previous': ''
        },
        {
            'date': '30.10',
            'time': '19:00',
            'name': 'ADP Non-Farm Employment Change',
            'imp_emoji': 'üü°',
            'forecast': '143K',
            'previous': '150K'
        }
    ]
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    for event in sample_events:
        events.append(event)
    
    return events

async def send_telegram_message(events):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    bot = Bot(token=BOT_TOKEN)
    
    month_ru = {
        'January': '—è–Ω–≤–∞—Ä—å', 'February': '—Ñ–µ–≤—Ä–∞–ª—å', 'March': '–º–∞—Ä—Ç', 
        'April': '–∞–ø—Ä–µ–ª—å', 'May': '–º–∞–π', 'June': '–∏—é–Ω—å', 
        'July': '–∏—é–ª—å', 'August': '–∞–≤–≥—É—Å—Ç', 'September': '—Å–µ–Ω—Ç—è–±—Ä—å',
        'October': '–æ–∫—Ç—è–±—Ä—å', 'November': '–Ω–æ—è–±—Ä—å', 'December': '–¥–µ–∫–∞–±—Ä—å'
    }
    
    today = date.today()
    month_en = today.strftime('%B')
    month_name = month_ru.get(month_en, month_en)
    
    start_week = today - timedelta(days=today.weekday())
    end_week = start_week + timedelta(days=6)
    week_str = f"—Å {start_week.strftime('%d.%m')} –ø–æ {end_week.strftime('%d.%m')}"
    
    if not events:
        message = f"""<b>üìÖ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –°–®–ê ({week_str}, {month_name})</b>

ü§∑‚Äç‚ôÇÔ∏è <i>–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –Ω–µ—Ç —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –°–®–ê</i>

üí° <i>–û–±—ã—á–Ω–æ –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ –§–†–°
‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ (NFP)
‚Ä¢ –ò–Ω—Ñ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (CPI)
‚Ä¢ –í–í–ü –∏ —Ä–æ–∑–Ω–∏—á–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏</i>"""
    else:
        message = f"""<b>üìÖ –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–ï –°–û–ë–´–¢–ò–Ø –°–®–ê üá∫üá∏</b>
<b>üìÜ –ü–µ—Ä–∏–æ–¥: {week_str}, {month_name}</b>
<b>‚è∞ –í—Ä–µ–º—è –º–æ—Å–∫–æ–≤—Å–∫–æ–µ (MSK)</b>

"""
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
        events_by_date = {}
        for event in events:
            if event['date'] not in events_by_date:
                events_by_date[event['date']] = []
            events_by_date[event['date']].append(event)
        
        for date_str, date_events in events_by_date.items():
            message += f"\n<b>üóì {date_str}</b>\n"
            for event in date_events:
                message += f"{event['imp_emoji']} <b>{event['time']}</b>\n"
                message += f"   üìä {event['name']}\n"
                
                if event.get('forecast') and event['forecast']:
                    message += f"   üìà –ü—Ä–æ–≥–Ω–æ–∑: {event['forecast']}\n"
                if event.get('previous') and event['previous']:
                    message += f"   üìâ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ: {event['previous']}\n"
                
                message += "\n"
        
        message += "<i>üí° –í—Ä–µ–º—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ EST –≤ MSK (+6 —á–∞—Å–æ–≤)</i>"
    
    try:
        await bot.send_message(chat_id=CHAT_ID, text=message, parse_mode='HTML')
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 70)
    print("üöÄ –ü–ê–†–°–ï–† –≠–ö–û–ù–û–ú–ò–ß–ï–°–ö–ò–• –°–û–ë–´–¢–ò–ô –°–®–ê")
    print("=" * 70)
    
    print(f"\nüìÖ –î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}")
    print("üîç –ò—â–µ–º —Å–æ–±—ã—Ç–∏—è –°–®–ê –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é...")
    
    events = get_manual_events()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
    
    if events:
        print("\nüìã –î–µ—Ç–∞–ª–∏ —Å–æ–±—ã—Ç–∏–π:")
        for i, event in enumerate(events, 1):
            print(f"{i}. {event['date']} {event['time']} {event['imp_emoji']} {event['name']}")
    
    print(f"\nüì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    success = loop.run_until_complete(send_telegram_message(events))
    
    if success:
        print("üéâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
    
    print("\n" + "=" * 70)
    print("‚ú® –°–ö–†–ò–ü–¢ –ó–ê–í–ï–†–®–ò–õ –†–ê–ë–û–¢–£")
    print("=" * 70)

if __name__ == "__main__":
    main()
